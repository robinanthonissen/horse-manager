// <auto-generated />
using Horse_Manager_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace Horse_Manager_API.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20180509092932_AddHorseCount")]
    partial class AddHorseCount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("Horse_Manager_API.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HorseCount");

                    b.Property<string>("Name");

                    b.Property<int>("StableID");

                    b.HasKey("CategoryID");

                    b.HasIndex("StableID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Horse", b =>
                {
                    b.Property<int>("HorseID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BirthDate");

                    b.Property<string>("Breeder");

                    b.Property<int>("CategoryID");

                    b.Property<string>("Description");

                    b.Property<string>("Father");

                    b.Property<string>("Father_Father");

                    b.Property<string>("Father_Mother");

                    b.Property<string>("Gender");

                    b.Property<string>("Level");

                    b.Property<string>("Mother");

                    b.Property<string>("Mother_Father");

                    b.Property<string>("Mother_Mother");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.Property<string>("Peedigree_Link");

                    b.Property<int>("Price");

                    b.Property<int>("RiderID");

                    b.Property<int>("StableID");

                    b.Property<string>("Studbook");

                    b.Property<string>("Youtube_Link1");

                    b.Property<string>("Youtube_Link2");

                    b.HasKey("HorseID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("StableID");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("HorseID");

                    b.Property<string>("ImageURL");

                    b.Property<int>("ParentObjectID");

                    b.Property<string>("ParentObjectType");

                    b.Property<int?>("StableID");

                    b.HasKey("ImageID");

                    b.HasIndex("HorseID");

                    b.HasIndex("StableID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Stable", b =>
                {
                    b.Property<int>("StableID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Facebook");

                    b.Property<string>("Instagram");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<int>("UserID");

                    b.Property<string>("Website");

                    b.Property<string>("Zip_Code");

                    b.HasKey("StableID");

                    b.HasIndex("UserID");

                    b.ToTable("Stables");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Subscription_Plan", b =>
                {
                    b.Property<int>("Subscription_PlanID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Price");

                    b.Property<string>("Subscription_Plan_Name");

                    b.HasKey("Subscription_PlanID");

                    b.ToTable("Subscription_Plans");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("About");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName");

                    b.Property<string>("Image");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<int>("Subscription_PlanID");

                    b.Property<string>("Zip_Code");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Worker", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Job");

                    b.Property<int>("StableID");

                    b.Property<int>("UserID");

                    b.HasKey("WorkerID");

                    b.HasIndex("StableID");

                    b.HasIndex("UserID");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Category", b =>
                {
                    b.HasOne("Horse_Manager_API.Models.Stable")
                        .WithMany("Categories")
                        .HasForeignKey("StableID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Horse", b =>
                {
                    b.HasOne("Horse_Manager_API.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Horse_Manager_API.Models.Stable")
                        .WithMany("Horses")
                        .HasForeignKey("StableID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Image", b =>
                {
                    b.HasOne("Horse_Manager_API.Models.Horse")
                        .WithMany("Images")
                        .HasForeignKey("HorseID");

                    b.HasOne("Horse_Manager_API.Models.Stable")
                        .WithMany("Images")
                        .HasForeignKey("StableID");
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Stable", b =>
                {
                    b.HasOne("Horse_Manager_API.Models.User")
                        .WithMany("Own_Stables")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Horse_Manager_API.Models.Worker", b =>
                {
                    b.HasOne("Horse_Manager_API.Models.Stable", "Stable")
                        .WithMany("Workers")
                        .HasForeignKey("StableID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Horse_Manager_API.Models.User", "User")
                        .WithMany("Work")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
